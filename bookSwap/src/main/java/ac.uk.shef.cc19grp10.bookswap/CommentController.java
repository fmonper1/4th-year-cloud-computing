package ac.uk.shef.cc19grp10.bookswap;

import ac.uk.shef.cc19grp10.bookswap.models.Comment;
import ac.uk.shef.cc19grp10.bookswap.repositories.CommentRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

import javax.validation.Valid;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/comment") // This means URL's start with /demo (after Application path)
public class CommentController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private CommentRepository commentRepository;

	private final Logger logger = LoggerFactory.getLogger(CommentController.class);


	@RequestMapping(path="/add", method = RequestMethod.POST) // Map only POST Requests
	public String submitComment(@Valid @ModelAttribute("comment")Comment comment,
						 BindingResult result, ModelMap model) {
		if (result.hasErrors()) {
			logger.info(result.toString());
			return "error";
		}
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		commentRepository.save(comment);

		return "redirect:listings/{comment.listing.id}/view";
	}

}